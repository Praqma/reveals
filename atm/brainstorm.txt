Primer: what
Part1: "theory and history"
Part2: hands on work

Part1:
Why is it important to have planning
Background on planning

Almost every project is an elephant
elephant: https://www.flickr.com/photos/danramarch/4565233602/
Need to eat it one step at a time

All projects starts with a goal/vision

agile manifesto

Terminology
Goal/vision
Breakdown
Estimates
Prioritization

Product backlog
Planning
Sprint backlog
Sprint review

milestones

What is wrong with the old ways of doing things?
End user feedback.
Old: In the end
New: all the time!

Start by a vission: What is it the end user wants, or imagines?
Note that the vission can change!

Statement of work
Briefing: Do you get it? If not, then continue

What is the first delivery?
MVP

MoSCoW principle:


Deadlines:
Milestones: Flexible sprints.

You can always deliver something

Every single commit is a potential release candidate

Backlog:





Still think we should use the Praqmatic Workflow here - I realize that we would be showing tools that they arenfamilailr with - but the weight would be on GitHub Issues and Waffle - it woudl be a demonstration, and they could easily do a few exercises!

Part2:
So how to do it: practical
Praqmatic workflow
Github Issues

Estimates
Prio
